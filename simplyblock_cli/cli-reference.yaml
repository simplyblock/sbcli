# $schema: ./cli-reference-schema.yaml
# yaml-language-server: $schema=./cli-reference-schema.yaml
commands:
  - name: "storage-node"
    help: "Storage node commands"
    aliases:
      - sn
    weight: 100
    subcommands:
      - name: deploy
        help: "Prepares a host to be used as a storage node"
        description: >
          Runs locally on to-be storage node hosts. Installs storage node dependencies and prepares it to be used as a
          storage node. Only required, in standalone deployment outside of Kubernetes.
        arguments:
          - name: "--ifname"
            help: "Management interface name, e.g. eth0"
            description: >
              The network interface to be used for communication between the control plane
              and the storage node.
            dest: ifname
            type: str
          - name: "--isolate-cores"
            help: "Isolate cores in kernel args for provided cpu mask"
            dest: isolate_cores
            type: bool
            default: false
            action: store_true
      - name: configure
        help: "Prepare a configuration file to be used when adding the storage node"
        description: >
          Runs locally on to-be storage node hosts. Reads system information (CPUs topology, NVME devices) and prepares
          yaml config to be used when adding the storage node.
        arguments:
          - name: "--max-lvol"
            help: "Max logical volume per storage node"
            dest: max_lvol
            type: int
            required: true
          - name: "--max-size"
            help: "Maximum amount of GB to be utilized on this storage node"
            description: >
              Maximum amount of GB to be utilized on this storage node. This cannot be larger than the total effective
              cluster capacity. A safe value is `1/n * 2.0` of effective cluster capacity. Meaning, if you have three
              storage nodes, each with 100 TiB of raw capacity and a cluster with erasure coding scheme 1+1
              (two replicas), the effective cluster capacity is _100 TiB * 3 / 2 = 150 TiB_. Setting this parameter to
              _150 TiB / 3 * 2 = 100TiB_ would be a safe choice.
            dest: max_prov
            type: str
            required: true
          - name: "--nodes-per-socket"
            help: "number of each node to be added per each socket."
            dest: nodes_per_socket
            type: int
            default: 1
          - name: "--sockets-to-use"
            help: "The system socket to use when adding the storage nodes"
            description: >
              System socket to use when adding storage nodes. Comma-separated list: e.g. 0,1
            dest: sockets_to_use
            type: str
            default: "0"
          - name: "--pci-allowed"
            help: "Comma separated list of PCI addresses of Nvme devices to use for storage devices."
            description: >
              Storage PCI addresses to use for storage devices(Normal address and full address are accepted). Comma-separated list: e.g. 0000:00:01.0,00:02.0
            dest: pci_allowed
            required: false
            type: str
            default: ""
          - name: "--pci-blocked"
            help: "Comma separated list of PCI addresses of Nvme devices to not use for storage devices"
            description: >
              Storage PCI addresses to not use for storage devices(Normal address and full address are accepted). Comma-separated list: e.g. 0000:00:01.0,00:02.0
            dest: pci_blocked
            required: false
            type: str
            default: ""
      - name: configure-upgrade
        help: "Upgrade the automated configuration file with new changes of cpu mask or storage devices"
        description: >
          Regenerate the core distribution and auto calculation according to changes in cpu_mask and ssd_pcis only

      - name: deploy-cleaner
        help: "Cleans a previous simplyblock deploy (local run)"
        description: >
          Run locally on storage nodes and control plane hosts. Remove a previous deployment to support a fresh
          scratch-deployment of cluster software.
      - name: add-node
        help: "Adds a storage node by its IP address"
        arguments:
          - name: "cluster_id"
            help: "Cluster id"
            dest: cluster_id
            type: str
          - name: "node_addr"
            help: "Address of storage node api to add, like <node-ip>:5000"
            dest: node_addr
            type: str
          - name: "ifname"
            help: "Management interface name"
            dest: ifname
            type: str
          - name: "--journal-partition"
            help: "1: auto-create small partitions for journal on nvme devices. 0: use a separate (the smallest) nvme device of the node for journal. The journal needs a maximum of 3 percent of total available raw disk space."
            dest: partitions
            type: int
            default: 1
          - name: "--jm-percent"
            help: "Number in percent to use for JM from each device"
            dest: jm_percent
            type: int
            default: 3
            private: true
          - name: "--data-nics"
            help: "Storage network interface name(s). Can be more than one."
            description: >
              Storage network interface name(s). Can be more than one. Comma-separated list: e.g. eth0,eth1
            dest: data_nics
            type: str
            nargs: "+"
          - name: "--size-of-device"
            help: "Size of device per storage node"
            dest: partition_size
            type: str
            private: true
          - name: "--spdk-image"
            help: "SPDK image uri"
            dest: spdk_image
            type: str
            private: true
          - name: "--spdk-debug"
            help: "Enable spdk debug logs"
            dest: spdk_debug
            type: bool
            action: store_true
            private: true
          - name: "--iobuf_small_bufsize"
            help: "bdev_set_options param"
            dest: small_bufsize
            type: int
            default: 0
            private: true
          - name: "--iobuf_large_bufsize"
            help: "bdev_set_options param"
            dest: large_bufsize
            type: int
            default: 0
            private: true
          - name: "--enable-test-device"
            help: "Enable creation of test device"
            dest: enable_test_device
            type: bool
            action: store_true
            private: true
          - name: "--disable-ha-jm"
            help: "Disable HA JM for distrib creation"
            dest: enable_ha_jm
            type: bool
            default: true
            action: store_false
            private: true
          - name: "--ha-jm-count"
            help: "HA JM count"
            dest: ha_jm_count
            type: int
            default: 3
          - name: "--namespace"
            help: "Kubernetes namespace to deploy on"
            dest: namespace
            type: str
          - name: "--id-device-by-nqn"
            help: "Use device nqn to identify it instead of serial number"
            dest: id_device_by_nqn
            type: bool
            default: false
            action: store_true
            private: true
          - name: "--max-snap"
            help: "Max snapshot per storage node"
            dest: max_snap
            type: int
            default: 5000
            private: true
      - name: delete
        help: "Deletes a storage node object from the state database."
        usage: >
          Deletes a storage node object from the state database. It must only be used on clusters without any logical
          volumes. Warning: This is dangerous and could lead to unstable cluster if used on active cluster.
        arguments:
          - name: node_id
            help: Storage node id
            dest: node_id
            completer: _completer_get_sn_list
            type: str
          - name: "--force"
            help: "Force delete storage node from DB...Hopefully you know what you do"
            dest: force_remove
            type: bool
            action: store_true
      - name: remove
        help: "Removes a storage node from the cluster"
        description: >
          The storage node cannot be used or added any more. Any data residing on this storage node will be migrated to
          the remaining storage nodes. The user must ensure that there is sufficient free space in remaining cluster to
          allow for successful node removal.
          
          !!! danger
              If there isn't enough storage available, the cluster may run full and switch to read-only mode.
        arguments:
          - name: node_id
            help: Storage node id
            dest: node_id
            completer: _completer_get_sn_list
            type: str
          - name: "--force-remove"
            help: "Force remove all logical volumes and snapshots"
            dest: force_remove
            type: bool
            action: store_true
      - name: list
        help: "Lists all storage nodes"
        arguments:
          - name: "--cluster-id"
            help: "Cluster id"
            dest: cluster_id
            type: str
          - name: "--json"
            help: "Print outputs in json format"
            dest: json
            type: bool
            action: store_true
      - name: get
        help: "Gets a storage node's information"
        arguments:
          - name: node_id
            help: Storage node id
            dest: node_id
            completer: _completer_get_sn_list
            type: str
      - name: restart
        help: "Restarts a storage node"
        description: >
          A storage node is required to be _offline_ to be restarted. All functions and device drivers will be reset
          as a result of the restart. New physical devices can only be added with a storage node restart. During
          restart, the node will not accept any I/O.
        arguments:
          - name: node_id
            help: Storage node id
            dest: node_id
            completer: _completer_get_sn_list
            type: str
          - name: "--max-lvol"
            help: "Max logical volume per storage node"
            dest: max_lvol
            type: int
            default: 0
          - name: "--max-snap"
            help: "Max snapshot per storage node"
            dest: max_snap
            type: int
            default: 5000
            private: true
          - name: "--max-size"
            help: "Maximum amount of GB to be utilized on this storage node"
            description: >
              Maximum amount of GB to be utilized on this storage node. This cannot be larger than the total effective
              cluster capacity. A safe value is `1/n * 2.0` of effective cluster capacity. Meaning, if you have three
              storage nodes, each with 100 TiB of raw capacity and a cluster with erasure coding scheme 1+1
              (two replicas), the effective cluster capacity is _100 TiB * 3 / 2 = 150 TiB_. Setting this parameter to
              _150 TiB / 3 * 2 = 100TiB_ would be a safe choice.
            dest: max_prov
            type: str
            default: "0"
            private: true
          - name: "--node-addr"
            aliases:
              - "--node-ip"
            help: "Restart Node on new node"
            description: >
              Allows to restart an existing storage node on new host or hardware. Devices attached to storage nodes
              have to be attached to new hosts. Otherwise, they have to be marked as failed and removed from cluster.
              Triggers a pro-active migration of data from those devices onto other storage nodes.<br><br>
              The provided value must be presented in the form of _IP:PORT_. Be default the port number is _5000_.
            dest: node_ip
            type: str
          - name: "--spdk-image"
            help: "SPDK image uri"
            dest: spdk_image
            type: str
            private: true
          - name: "--reattach-volume"
            help: "Reattach volume to new instance"
            dest: reattach_volume
            type: bool
            action: store_true
            private: true
          - name: "--spdk-debug"
            help: "Enable spdk debug logs"
            dest: spdk_debug
            type: bool
            action: store_true
            private: true
          - name: "--iobuf_small_bufsize"
            help: "bdev_set_options param"
            dest: small_bufsize
            type: int
            default: 0
            private: true
          - name: "--iobuf_large_bufsize"
            help: "bdev_set_options param"
            dest: large_bufsize
            type: int
            default: 0
            private: true
          - name: "--force"
            help: "Force restart"
            dest: force
            type: bool
            action: store_true
          - name: "--ssd-pcie"
            help: "New Nvme PCIe address to add to the storage node. Can be more than one."
            dest: ssd_pcie
            required: false
            type: str
            nargs: +
            default: ""
          - name: "--force-lvol-recreate"
            help: "Force LVol recreate on node restart even if lvol bdev was not recovered"
            dest: force_lvol_recreate
            type: bool
            action: store_true
            default: False
      - name: shutdown
        help: "Initiates a storage node shutdown"
        usage: Once the command is issued, the node will stop accepting IO,but IO, which was previously received, will still be processed. In a high-availability setup, this will not impact operations.
        arguments:
          - name: node_id
            help: Storage node id
            dest: node_id
            completer: _completer_get_sn_list
            type: str
          - name: "--force"
            help: "Force node shutdown"
            dest: force
            type: bool
            action: store_true
      - name: suspend
        help: "Suspends a storage node"
        usage: The node will stop accepting new IO, but will finish processing any IO, which has been received already.
        arguments:
          - name: node_id
            help: Storage node id
            dest: node_id
            completer: _completer_get_sn_list
            type: str
          - name: "--force"
            help: "Force node suspend"
            dest: force
            type: bool
            action: store_true
      - name: resume
        help: "Resumes a storage node"
        arguments:
          - name: node_id
            help: Storage node id
            dest: node_id
            completer: _completer_get_sn_list
            type: str
      - name: get-io-stats
        help: "Gets storage node IO statistics"
        arguments:
          - name: node_id
            help: Storage node id
            dest: node_id
            completer: _completer_get_sn_list
            type: str
          - name: "--history"
            help: "list history records -one for every 15 minutes- for XX days and YY hours -up to 10 days in total-, format: XXdYYh"
            dest: history
            type: str
          - name: "--records"
            help: "Number of records, default: 20"
            dest: records
            type: int
            default: 20
      - name: get-capacity
        help: "Gets a storage node's capacity statistics"
        arguments:
          - name: node_id
            help: Storage node id
            dest: node_id
            completer: _completer_get_sn_list
            type: str
          - name: "--history"
            help: "list history records -one for every 15 minutes- for XX days and YY hours -up to 10 days in total-, format: XXdYYh"
            dest: history
            type: str
      - name: list-devices
        help: "Lists storage devices"
        arguments:
          - name: node_id
            help: Storage node id
            dest: node_id
            completer: _completer_get_sn_list
            type: str
          - name: "--json"
            help: "Print outputs in json format"
            dest: json
            type: bool
            action: store_true
      - name: device-testing-mode
        help: "Sets a device to testing mode"
        private: true
        arguments:
          - name: "device_id"
            help: "Device id"
            dest: device_id
            type: str
          - name: "mode"
            help: "Testing mode"
            dest: mode
            type: str
            choices:
              - full_pass_through
              - io_error_on_write
              - io_error_on_all
              - hotplug_removal
              - discard_io_all
              - io_error_on_unmap
              - io_error_on_read
            default: full_pass_through
      - name: get-device
        help: "Gets storage device by its id"
        arguments:
          - name: "device_id"
            help: "Device id"
            dest: device_id
            type: str
      - name: reset-device
        help: "Resets a storage device"
        usage: >
          Hardware device reset. Resetting the device can return the device from an unavailable into online state, if
          successful.
        arguments:
          - name: "device_id"
            help: "Device id"
            dest: device_id
            type: str
      - name: restart-device
        help: "Restarts a storage device"
        usage: >
          A previously logically or physically removed or unavailable device, which has been re-inserted, may be
          returned into online state. If the device is not physically present, accessible or healthy, it will flip back
          into unavailable state again.
        arguments:
          - name: "device_id"
            help: "Device id"
            dest: device_id
            type: str
      - name: add-device
        help: "Adds a new storage device"
        usage: >
          Adds a device, including a previously detected device (currently in "new" state) into cluster and launches
          an auto-rebalancing background process in which some cluster capacity is re-distributed to this newly added
          device.
        arguments:
          - name: "device_id"
            help: "Device id"
            dest: device_id
            type: str
      - name: remove-device
        help: "Logically removes a storage device"
        usage: >
          Logical removes a storage device. The device will become unavailable, irrespectively if it was physically
          removed from the server. This function can be used if auto-detection of removal did not work or if the device
          must be maintained while remaining inserted into the server.
        arguments:
          - name: "device_id"
            help: "Device id"
            dest: device_id
            type: str
          - name: "--force"
            help: "Force device remove"
            dest: force
            type: bool
            action: store_true
      - name: set-failed-device
        help: "Sets storage device to failed state"
        usage: >
          Sets a storage device to state failed. This command can be used, if an administrator believes that the device
          must be replaced. Attention: a failed state is final, meaning, all data on the device will be automatically
          recovered to other devices in the cluster.
        arguments:
          - name: "device_id"
            help: "Device ID"
            dest: device_id
            type: str
      - name: get-capacity-device
        help: "Gets a device's capacity"
        arguments:
          - name: "device_id"
            help: "Device id"
            dest: device_id
            type: str
          - name: "--history"
            help: "list history records -one for every 15 minutes- for XX days and YY hours -up to 10 days in total-, format: XXdYYh"
            dest: history
            type: str
      - name: get-io-stats-device
        help: "Gets a device's IO statistics"
        arguments:
          - name: "device_id"
            help: "Device id"
            dest: device_id
            type: str
          - name: "--history"
            help: "list history records -one for every 15 minutes- for XX days and YY hours -up to 10 days in total-, format: XXdYYh"
            dest: history
            type: str
          - name: "--records"
            help: "Number of records, default: 20"
            dest: records
            type: int
            default: 20
      - name: port-list
        help: "Gets the data interfaces list of a storage node"
        arguments:
          - name: "node_id"
            help: "Storage node id"
            dest: node_id
            type: str
            completer: _completer_get_sn_list
      - name: port-io-stats
        help: "Gets the data interfaces' IO stats"
        arguments:
          - name: "port_id"
            help: "Data port id"
            dest: port_id
            type: str
          - name: "--history"
            help: "list history records -one for every 15 minutes- for XX days and YY hours -up to 10 days in total, format: XXdYYh"
            dest: history
            type: str
      - name: check
        help: "Checks the health status of a storage node"
        description: >
          Verifies if all of the NVMe-oF connections to and from the storage node, including those to and from other
          storage devices in the cluster and the meta-data journal, are available and healthy and all internal objects
          of the node, such as data placement and erasure coding services, are in a healthy state.
        arguments:
          - name: "node_id"
            help: "Storage node id"
            dest: node_id
            type: str
            completer: _completer_get_sn_list
      - name: check-device
        help: "Checks the health status of a device"
        arguments:
          - name: "device_id"
            help: "Device id"
            dest: device_id
            type: str
      - name: info
        help: "Gets the node's information"
        arguments:
          - name: "node_id"
            help: "Storage node id"
            dest: node_id
            type: str
            completer: _completer_get_sn_list
      - name: info-spdk
        help: "Gets the SPDK memory information"
        private: true
        arguments:
          - name: "node_id"
            help: "Storage node id"
            dest: node_id
            type: str
            completer: _completer_get_sn_list
      - name: remove-jm-device
        help: "Removes a journaling device"
        private: true
        arguments:
          - name: "jm_device_id"
            help: "Journaling device id"
            dest: jm_device_id
            type: str
          - name: "--force"
            help: "Force device remove"
            dest: force
            type: bool
            action: store_true
      - name: restart-jm-device
        help: "Restarts a journaling device"
        arguments:
          - name: "jm_device_id"
            help: "Journaling device id"
            dest: jm_device_id
            type: str
          - name: "--force"
            help: "Force device remove"
            dest: force
            type: bool
            action: store_true
      - name: send-cluster-map
        help: "Sends a new cluster map"
        private: true
        arguments:
          - name: "node_id"
            help: "Storage node id"
            dest: node_id
            type: str
            completer: _completer_get_sn_list
      - name: get-cluster-map
        help: "Get the current cluster map"
        private: true
        arguments:
          - name: "node_id"
            help: "Storage node id"
            dest: node_id
            type: str
            completer: _completer_get_sn_list
      - name: make-primary
        help: "Forces to make the provided node id primary"
        description: |
          Makes the storage node the primary node. This is required after certain storage cluster operations, such
          as a storage node migration.
        arguments:
          - name: "node_id"
            help: "Storage node id"
            dest: node_id
            type: str
            completer: _completer_get_sn_list
      - name: dump-lvstore
        help: "Dump lvstore data"
        private: true
        arguments:
          - name: "node_id"
            help: "Storage node id"
            dest: node_id
            type: str
            completer: _completer_get_sn_list
      - name: set
        help: "set storage node db value"
        private: true
        arguments:
          - name: "node_id"
            help: "Storage node id"
            dest: node_id
            type: str
          - name: "attr_name"
            help: "attr_name"
            dest: attr_name
            type: str
          - name: "attr_value"
            help: "attr_value"
            dest: attr_value
            type: str
  - name: "cluster"
    help: "Cluster commands"
    weight: 200
    subcommands:
      - name: create
        help: "Creates a new cluster"
        usage: >
          Created a new control plane cluster with the current node as the primary control plane node.
        arguments:
          - name: "--page_size"
            help: "The size of a data page in bytes"
            dest: page_size
            type: int
            default: 2097152
            private: true
          - name: "--CLI_PASS"
            help: "Password for CLI SSH connection"
            dest: CLI_PASS
            type: str
            private: true
          - name: "--cap-warn"
            help: "Capacity warning level in percent, default: 89"
            dest: cap_warn
            type: int
            default: 89
          - name: "--cap-crit"
            help: "Capacity critical level in percent, default: 99"
            dest: cap_crit
            type: int
            default: 99
          - name: "--prov-cap-warn"
            help: "Capacity warning level in percent, default: 250"
            dest: prov_cap_warn
            type: int
            default: 250
          - name: "--prov-cap-crit"
            help: "Capacity critical level in percent, default: 500"
            dest: prov_cap_crit
            type: int
            default: 500
          - name: "--ifname"
            help: "Management interface name, e.g. eth0"
            dest: ifname
            type: str
          - name: "--mgmt-ip"
            help: "Management IP address to use for the node (e.g., 192.168.1.10)"
            dest: mgmt_ip
            type: str
          - name: "--tls-secret-name"
            help: "Name of the Kubernetes TLS Secret to be used by the Ingress for HTTPS termination (e.g., my-tls-secret)"
            dest: tls_secret
            type: str
          - name: "--log-del-interval"
            help: "Logging retention policy, default: 3d"
            dest: log_del_interval
            type: str
            default: 3d
          - name: "--metrics-retention-period"
            help: "Retention period for I/O statistics (Prometheus), default: 7d"
            dest: metrics_retention_period
            type: str
            default: 7d
          - name: "--contact-point"
            help: "Email or slack webhook url to be used for alerting"
            dest: contact_point
            type: str
            default: ""
          - name: "--grafana-endpoint"
            help: "Endpoint url for Grafana"
            dest: grafana_endpoint
            type: str
            default: ""
          - name: "--data-chunks-per-stripe"
            help: "Erasure coding schema parameter k (distributed raid), default: 1"
            dest: distr_ndcs
            type: int
            default: 1
          - name: "--parity-chunks-per-stripe"
            help: "Erasure coding schema parameter n (distributed raid), default: 1"
            dest: distr_npcs
            type: int
            default: 1
          - name: "--distr-bs"
            help: "(Dev) distrb bdev block size, default: 4096"
            dest: distr_bs
            type: int
            default: 4096
            private: true
          - name: "--distr-chunk-bs"
            help: "(Dev) distrb bdev chunk block size, default: 4096"
            dest: distr_chunk_bs
            type: int
            default: 4096
            private: true
          - name: "--ha-type"
            help: "Logical volume HA type (single, ha), default is cluster ha type"
            dest: ha_type
            type: str
            choices:
              - single
              - ha
            default: ha
          - name: "--mode"
            help: "Environment to deploy management services, default: docker"
            dest: mode
            type: str
            choices:
              - docker
              - kubernetes
            default: docker
          - name: "--ingress-host-source"
            help: "Ingress host source: 'hostip' for node IP, 'loadbalancer' for external LB, or 'dns' for custom domain"
            dest: ingress_host_source
            type: str
            choices:
              - hostip
              - loadbalancer
              - dns
            default: hostip
          - name: "--dns-name"
            help: "Fully qualified DNS name to use as the Ingress host (required if --ingress-host-source=dns)"
            dest: dns_name
            type: str
            default: ""
          - name: "--enable-node-affinity"
            help: "Enable node affinity for storage nodes"
            dest: enable_node_affinity
            type: bool
            action: store_true
          - name: "--qpair-count"
            help: "NVMe/TCP transport qpair count per logical volume"
            usage: >
              Increase for clusters with few but very large logical volumes or decrease for clusters with a large number
              of very small logical volumes.
            dest: qpair_count
            type: 
              range:
                min: 0
                max: 128
            default: 0
          - name: "--max-queue-size"
            help: "The max size the queue will grow"
            dest: max_queue_size
            type: int
            default: 128
            private: true
          - name: "--inflight-io-threshold"
            help: "The number of inflight IOs allowed before the IO queuing starts"
            dest: inflight_io_threshold
            type: int
            default: 4
            private: true
          - name: "--enable-qos"
            help: "Enable qos bdev for storage nodes, true by default"
            dest: enable_qos
            type: bool
            default: false
            private: true
          - name: "--disable-monitoring"
            help: "Disable monitoring stack, false by default"
            dest: disable_monitoring
            type: bool
            default: false
            action: store_true
            private: true
          - name: "--strict-node-anti-affinity"
            help: >
              Enable strict node anti affinity for storage nodes. Never more than one chunk is placed on a node. This
              requires a minimum of _data-chunks-in-stripe + parity-chunks-in-stripe + 1_ nodes in the cluster.
            dest: strict_node_anti_affinity
            type: bool
            action: store_true
          - name: "--name"
            help: >
              Assigns a name to the newly created cluster.
            dest: name
            aliases:
              - "-n"
            type: str
      - name: add
        help: "Adds a new cluster"
        arguments:
          - name: "--page_size"
            help: "The size of a data page in bytes"
            dest: page_size
            type: int
            default: 2097152
            private: true
          - name: "--cap-warn"
            help: "Capacity warning level in percent, default: 89"
            dest: cap_warn
            type: int
            default: 89
          - name: "--cap-crit"
            help: "Capacity critical level in percent, default: 99"
            dest: cap_crit
            type: int
            default: 99
          - name: "--prov-cap-warn"
            help: "Capacity warning level in percent, default: 250"
            dest: prov_cap_warn
            type: int
            default: 250
          - name: "--prov-cap-crit"
            help: "Capacity critical level in percent, default: 500"
            dest: prov_cap_crit
            type: int
            default: 500
          - name: "--data-chunks-per-stripe"
            help: "Erasure coding schema parameter k (distributed raid), default: 1"
            dest: distr_ndcs
            type: int
            default: 1
          - name: "--parity-chunks-per-stripe"
            help: "Erasure coding schema parameter n (distributed raid), default: 1"
            dest: distr_npcs
            type: int
            default: 1
          - name: "--distr-bs"
            help: "(Dev) distrb bdev block size, default: 4096"
            dest: distr_bs
            type: int
            default: 4096
            private: true
          - name: "--distr-chunk-bs"
            help: "(Dev) distrb bdev chunk block size, default: 4096"
            dest: distr_chunk_bs
            type: int
            default: 4096
            private: true
          - name: "--ha-type"
            help: "Logical volume HA type (single, ha), default is cluster single type"
            dest: ha_type
            type: str
            choices:
              - single
              - ha
            default: ha
          - name: "--enable-node-affinity"
            help: "Enables node affinity for storage nodes"
            dest: enable_node_affinity
            type: bool
            action: store_true
          - name: "--qpair-count"
            help: "NVMe/TCP transport qpair count per logical volume"
            usage: >
              Increase for clusters with few but very large logical volumes or decrease for clusters with a large number
              of very small logical volumes.
            dest: qpair_count
            type:
              range:
                min: 0
                max: 128
            default: 0
          - name: "--max-queue-size"
            help: "The max size the queue will grow"
            dest: max_queue_size
            type: int
            default: 128
            private: true
          - name: "--inflight-io-threshold"
            help: "The number of inflight IOs allowed before the IO queuing starts"
            dest: inflight_io_threshold
            type: int
            default: 4
            private: true
          - name: "--enable-qos"
            help: "Enable qos bdev for storage nodes, default: true"
            dest: enable_qos
            type: bool
            default: false
            private: true
          - name: "--strict-node-anti-affinity"
            help: >
              Enable strict node anti affinity for storage nodes. Never more than one chunk is placed on a node.
              This requires a minimum of _data-chunks-in-stripe + parity-chunks-in-stripe + 1_ nodes in the cluster."
            dest: strict_node_anti_affinity
            type: bool
            action: store_true
          - name: "--name"
            help: >
              Assigns a name to the newly created cluster.
            dest: name
            aliases:
              - "-n"
            type: str
      - name: activate
        help: >
          Activates a cluster.
        usage: Once a cluster has sufficient nodes added, it needs to be activated. Can also be used to
          re-activate a suspended cluster.
        arguments:
          - name: "cluster_id"
            help: "Cluster id"
            dest: cluster_id
            type: str
            completer: _completer_get_cluster_list
          - name: "--force"
            help: "Force recreate distr and lv stores"
            dest: force
            type: bool
            action: store_true
          - name: "--force-lvstore-create"
            help: "Force recreate lv stores"
            dest: force_lvstore_create
            type: bool
            action: store_true
            completer: _completer_get_cluster_list
      - name: list
        help: "Shows the cluster list"
        arguments:
          - name: "--json"
            help: "Print json output"
            dest: json
            type: bool
            action: store_true
      - name: status
        help: "Shows a cluster's status"
        arguments:
          - name: "cluster_id"
            help: "Cluster id"
            dest: cluster_id
            type: str
            completer: _completer_get_cluster_list
      - name: complete-expand
        help: "Create lvstore on newly added nodes to the cluster"
        arguments:
          - name: "cluster_id"
            help: "Cluster id"
            dest: cluster_id
            type: str
            completer: _completer_get_cluster_list
      - name: show
        help: "Shows a cluster's statistics"
        arguments:
          - name: "cluster_id"
            help: "Cluster id"
            dest: cluster_id
            type: str
            completer: _completer_get_cluster_list
      - name: get
        help: "Gets a cluster's information"
        arguments:
          - name: "cluster_id"
            help: "Cluster id"
            dest: cluster_id
            type: str
            completer: _completer_get_cluster_list
      - name: suspend
        help: "Put the cluster status to be suspended"
        private: true
        arguments:
          - name: "cluster_id"
            help: "Cluster id"
            dest: cluster_id
            type: str
            completer: _completer_get_cluster_list
      - name: get-capacity
        help: "Gets a cluster's capacity"
        arguments:
          - name: "cluster_id"
            help: "Cluster id"
            dest: cluster_id
            type: str
            completer: _completer_get_cluster_list
          - name: "--json"
            help: "Print json output"
            dest: json
            type: bool
            action: store_true
          - name: "--history"
            help: "(XXdYYh), list history records (one for every 15 minutes) for XX days and YY hours (up to 10 days in total)."
            dest: history
            type: str
      - name: get-io-stats
        help: "Gets a cluster's I/O statistics"
        arguments:
          - name: "cluster_id"
            help: "Cluster id"
            dest: cluster_id
            type: str
            completer: _completer_get_cluster_list
          - name: "--records"
            help: "Number of records, default: 20"
            dest: records
            type: int
            default: 20
          - name: "--history"
            help: "(XXdYYh), list history records (one for every 15 minutes) for XX days and YY hours (up to 10 days in total)."
            dest: history
            type: str
      - name: get-logs
        help: "Returns a cluster's status logs"
        arguments:
          - name: "cluster_id"
            help: "Cluster id"
            dest: cluster_id
            type: str
            completer: _completer_get_cluster_list
          - name: "--json"
            help: "Return JSON formatted logs"
            dest: json
            type: bool
            action: store_true
          - name: "--limit"
            help: "show last number of logs, default 50"
            dest: limit
            type: int
            default: 50
      - name: get-secret
        help: "Gets a cluster's secret"
        arguments:
          - name: "cluster_id"
            help: "Cluster id"
            dest: cluster_id
            type: str
            completer: _completer_get_cluster_list
      - name: update-secret
        help: "Updates a cluster's secret"
        arguments:
          - name: "cluster_id"
            help: "Cluster id"
            dest: cluster_id
            type: str
            completer: _completer_get_cluster_list
          - name: "secret"
            help: "new 20 characters password"
            dest: secret
            type: str
      - name: check
        help: "Checks a cluster's health"
        arguments:
          - name: "cluster_id"
            help: "Cluster id"
            dest: cluster_id
            type: str
            completer: _completer_get_cluster_list
      - name: update
        help: "Updates a cluster to new version"
        usage: >
          Updates a the control plane to a new version. To update the storage nodes, they have to be shutdown and
          restarted. This can be done in a rolling manner. Attention: verify that an upgrade path is available and
          has been tested!"
        arguments:
          - name: "cluster_id"
            help: "Cluster id"
            dest: cluster_id
            type: str
            completer: _completer_get_cluster_list
          - name: "--cp-only"
            help: "Update the control plane only"
            dest: mgmt_only
            type: bool
            default: false
          - name: "--restart"
            help: "Restart the management services"
            dest: restart
            type: bool
            default: false
          - name: "--spdk-image"
            help: "Restart the storage nodes using the provided image"
            dest: spdk_image
            type: str
          - name: "--mgmt-image"
            help: "Restart the management services using the provided image"
            dest: mgmt_image
            type: str
      - name: graceful-shutdown
        help: "Initiates a graceful shutdown of a cluster's storage nodes"
        private: true
        arguments:
          - name: "cluster_id"
            help: "Cluster id"
            dest: cluster_id
            type: str
            completer: _completer_get_cluster_list
      - name: graceful-startup
        help: "Initiates a graceful startup of a cluster's storage nodes"
        private: true
        arguments:
          - name: "cluster_id"
            help: "Cluster id"
            dest: cluster_id
            type: str
            completer: _completer_get_cluster_list
          - name: "--clear-data"
            help: "clear Alceml data"
            dest: clear_data
            type: bool
            action: store_true
          - name: "--spdk-image"
            help: "SPDK image uri"
            dest: spdk_image
            type: str
      - name: list-tasks
        help: "Lists tasks of a cluster"
        arguments:
          - name: "cluster_id"
            help: "Cluster id"
            dest: cluster_id
            type: str
            completer: _completer_get_cluster_list
          - name: "--limit"
            help: "show last number of tasks, default 50"
            dest: limit
            type: int
            default: 50
      - name: cancel-task
        help: "Cancels task by task id"
        arguments:
          - name: "task_id"
            help: "Task id"
            dest: task_id
            type: str
      - name: get-subtasks
        help: "Get rebalancing subtasks list"
        arguments:
          - name: "task_id"
            help: "Task id"
            dest: task_id
            type: str
      - name: delete
        help: "Deletes a cluster"
        usage: This is only possible, if no storage nodes and pools are attached to the cluster
        arguments:
          - name: "cluster_id"
            help: "Cluster id"
            dest: cluster_id
            type: str
            completer: _completer_get_cluster_list
      - name: set
        help: "set cluster db value"
        private: true
        arguments:
          - name: "cluster_id"
            help: "cluster id"
            dest: cluster_id
            type: str
          - name: "attr_name"
            help: "attr_name"
            dest: attr_name
            type: str
          - name: "attr_value"
            help: "attr_value"
            dest: attr_value
            type: str
      - name: change-name
        help: Assigns or changes a name to a cluster
        arguments:
          - name: "cluster_id"
            help: "Cluster id"
            dest: cluster_id
            type: str
            completer: _completer_get_cluster_list
          - name: "name"
            help: "Name"
            dest: name
            type: str
  - name: "volume"
    help: "Logical volume commands"
    aliases:
      - lvol
    weight: 300
    subcommands:
      - name: add
        help: "Adds a new logical volume"
        arguments:
          - name: "name"
            help: "New logical volume name"
            dest: name
            type: str
          - name: "size"
            help: "Logical volume size: 10M, 10G, 10(bytes)"
            dest: size
            type: size
          - name: "pool"
            help: "Pool id or name"
            dest: pool
            type: str
          - name: "--snapshot"
            aliases:
              - "-s"
            help: "Make logical volume with snapshot capability, default: false"
            dest: snapshot
            type: bool
            action: store_true
            default: false
          - name: "--max-size"
            help: "Logical volume max size"
            dest: max_size
            type: size
            default: "1000T"
          - name: "--host-id"
            help: "Primary storage node id or Hostname"
            dest: host_id
            type: str
          - name: "--encrypt"
            help: "Use inline data encryption and decryption on the logical volume"
            dest: encrypt
            type: bool
            action: store_true
          - name: "--crypto-key1"
            help: "Hex value of key1 to be used for logical volume encryption"
            dest: crypto_key1
            type: str
          - name: "--crypto-key2"
            help: "Hex value of key2 to be used for logical volume encryption"
            dest: crypto_key2
            type: str
          - name: "--max-rw-iops"
            help: "Maximum Read Write IO Per Second"
            dest: max_rw_iops
            type: int
          - name: "--max-rw-mbytes"
            help: "Maximum Read Write Megabytes Per Second"
            dest: max_rw_mbytes
            type: int
          - name: "--max-r-mbytes"
            help: "Maximum Read Megabytes Per Second"
            dest: max_r_mbytes
            type: int
          - name: "--max-w-mbytes"
            help: "Maximum Write Megabytes Per Second"
            dest: max_w_mbytes
            type: int
          - name: "--max-namespace-per-subsys"
            help: "Maximum Namespace per subsystem"
            dest: max_namespace_per_subsys
            type: int
          - name: "--distr-vuid"
            help: "(Dev) set vuid manually, default: random (1-99999)"
            dest: distr_vuid
            type: int
            private: true
          - name: "--ha-type"
            help: "Logical volume HA type (single, ha), default is cluster HA type"
            dest: ha_type
            type: str
            choices:
              - single
              - default
              - ha
            default: default
          - name: "--lvol-priority-class"
            help: "Logical volume priority class"
            dest: lvol_priority_class
            type: int
            default: 0
          - name: "--namespace"
            help: "Set logical volume namespace for k8s clients"
            dest: namespace
            type: str
          - name: "--uid"
            help: "Set logical volume id"
            dest: uid
            type: str
            private: true
          - name: "--pvc-name"
            aliases:
              - "--pvc_name"
            help: "Set logical volume PVC name for k8s clients"
            description: |
              Set the logical volume persistent volume claim name for Kubernetes clients.<br><br>
              !!! warning
                  The old parameter name `--pvc_name` is deprecated and shouldn't be used anymore. It will eventually be
                  removed. Please exchange the use of `--pvc_name` with `--pvc-name`.
            dest: pvc_name
            type: str
      - name: qos-set
        help: "Changes QoS settings for an active logical volume"
        arguments:
          - name: "volume_id"
            help: "Logical volume id"
            dest: volume_id
            type: str
          - name: "--max-rw-iops"
            help: "Maximum Read Write IO Per Second"
            dest: max_rw_iops
            type: int
          - name: "--max-rw-mbytes"
            help: "Maximum Read Write Megabytes Per Second"
            dest: max_rw_mbytes
            type: int
          - name: "--max-r-mbytes"
            help: "Maximum Read Megabytes Per Second"
            dest: max_r_mbytes
            type: int
          - name: "--max-w-mbytes"
            help: "Maximum Write Megabytes Per Second"
            dest: max_w_mbytes
            type: int
      - name: list
        help: "Lists logical volumes"
        arguments:
          - name: "--cluster-id"
            help: "List logical volumes in particular cluster"
            dest: cluster_id
            type: str
          - name: "--pool"
            help: "List logical volumes in particular pool id or name"
            dest: pool
            type: str
          - name: "--json"
            help: "Print outputs in json format"
            dest: json
            type: bool
            action: store_true
          - name: "--all"
            help: "List soft deleted logical volumes"
            dest: all
            type: bool
            action: store_true
      - name: list-mem
        help: "Gets the size and max_size of a logical volume"
        private: true
        arguments:
          - name: "--json"
            help: "Print outputs in json format"
            dest: json
            type: bool
            action: store_true
          - name: "--csv"
            help: "Print outputs in csv format"
            dest: csv
            type: bool
            action: store_true
      - name: get
        help: "Gets the logical volume details"
        arguments:
          - name: "volume_id"
            help: "Logical volume id or name"
            dest: volume_id
            type: str
          - name: "--json"
            help: "Print outputs in json format"
            dest: json
            type: bool
            action: store_true
      - name: delete
        help: "Deletes a logical volume"
        usage: >
          Deletes a logical volume. Attention: All data will be lost! This is an irreversible operation! Actual storage
          capacity will be freed as an asynchronous background task. It may take a while until the actual storage
          is released.
        arguments:
          - name: "volume_id"
            help: "Logical volumes id or ids"
            dest: volume_id
            type: str
            nargs: "+"
          - name: "--force"
            help: "Force delete logical volume from the cluster"
            dest: force
            type: bool
            action: store_true
      - name: connect
        help: "Gets the logical volume's NVMe/TCP connection string(s)"
        usage: Multiple connections to the cluster are always available for multi-pathing and high-availability.
        arguments:
          - name: "volume_id"
            help: "Logical volume id"
            dest: volume_id
            type: str
          - name: "--ctrl-loss-tmo"
            dest: "ctrl_loss_tmo"
            help: "Control loss timeout for this volume"
            type: int
      - name: resize
        help: "Resizes a logical volume"
        usage: >
          Resizes a logical volume. Only increasing a volume is possible. The new capacity must fit into the storage
          pool's free capacity.
        arguments:
          - name: "volume_id"
            help: "Logical volume id"
            dest: volume_id
            type: str
          - name: "size"
            help: "New logical volume size size: 10M, 10G, 10(bytes)"
            dest: size
            type: size
      - name: create-snapshot
        help: "Creates a snapshot from a logical volume"
        arguments:
          - name: "volume_id"
            help: "Logical volume id"
            dest: volume_id
            type: str
          - name: "name"
            help: "Snapshot name"
            dest: name
            type: str
      - name: clone
        help: "Provisions a logical volumes from an existing snapshot"
        arguments:
          - name: "snapshot_id"
            help: "Snapshot id"
            dest: snapshot_id
            type: str
          - name: "clone_name"
            help: "Clone name"
            dest: clone_name
            type: str
          - name: "--resize"
            help: "New logical volume size: 10M, 10G, 10(bytes). Can only increase."
            dest: resize
            type: size
            default: "0"
      - name: move
        help: "Moves a full copy of the logical volume between nodes"
        private: true
        arguments:
          - name: "volume_id"
            help: "Logical volume id"
            dest: volume_id
            type: str
          - name: "node_id"
            help: "Destination node id"
            dest: node_id
            type: str
          - name: "--force"
            help: "Force logical volume delete from source node"
            dest: force
            type: bool
            action: store_true
      - name: get-capacity
        help: "Gets a logical volume's capacity"
        arguments:
          - name: "volume_id"
            help: "Logical volume id"
            dest: volume_id
            type: str
          - name: "--history"
            help: "(XXdYYh), list history records (one for every 15 minutes) for XX days and YY hours (up to 10 days in total)."
            dest: history
            type: str
      - name: get-io-stats
        help: "Gets a logical volume's I/O statistics"
        arguments:
          - name: "volume_id"
            help: "Logical volume id"
            dest: volume_id
            type: str
          - name: "--history"
            help: "(XXdYYh), list history records (one for every 15 minutes) for XX days and YY hours (up to 10 days in total)."
            dest: history
            type: str
          - name: "--records"
            help: "Number of records, default: 20"
            dest: records
            type: int
            default: 20
      - name: check
        help: "Checks a logical volume's health"
        arguments:
          - name: "volume_id"
            help: "Logical volume id"
            dest: volume_id
            type: str
      - name: inflate
        help: "Inflate a logical volume"
        usage: >
          All unallocated clusters are allocated and copied from the parent or zero filled if not allocated in the
          parent. Then all dependencies on the parent are removed.
        arguments:
          - name: "volume_id"
            help: "Logical volume id"
            dest: volume_id
            type: str
  - name: "control-plane"
    help: "Control plane commands"
    aliases:
      - cp
      - mgmt
    weight: 400
    subcommands:
      - name: add
        help: "Adds a control plane to the cluster (local run)"
        arguments:
          - name: "cluster_ip"
            help: "Cluster IP address"
            dest: cluster_ip
            type: str
          - name: "cluster_id"
            help: "Cluster id"
            dest: cluster_id
            type: str
          - name: "cluster_secret"
            help: "Cluster secret"
            dest: cluster_secret
            type: str
          - name: "--ifname"
            help: "Management interface name"
            dest: ifname
            type: str
          - name: "--mgmt-ip"
            help: "Management IP address to use for the node (e.g., 192.168.1.10)"
            dest: mgmt_ip
            type: str
          - name: "--mode"
            help: "Environment to deploy management services, default: docker "
            dest: mode
            type: str
            choices:
              - docker
              - kubernetes
            default: docker
      - name: list
        help: "Lists all control plane nodes"
        arguments:
          - name: "--json"
            help: "Print outputs in json format"
            dest: json
            type: bool
            action: store_true
      - name: remove
        help: "Removes a control plane node"
        arguments:
          - name: "node_id"
            help: "Control plane node id"
            dest: node_id
            type: str
  - name: "storage-pool"
    help: "Storage pool commands"
    aliases:
      - pool
    weight: 500
    subcommands:
      - name: add
        help: "Adds a new storage pool"
        arguments:
          - name: "name"
            help: "New pool name"
            dest: name
            type: str
          - name: "cluster_id"
            help: "Cluster id"
            dest: cluster_id
            type: str
          - name: "--pool-max"
            help: "Pool maximum size: 20M, 20G, 0. Default: 0"
            dest: pool_max
            type: size
            default: "0"
          - name: "--lvol-max"
            help: "Logical volume maximum size: 20M, 20G, 0. Default: 0"
            dest: lvol_max
            type: size
            default: "0"
          - name: "--max-rw-iops"
            help: "Maximum Read Write IO Per Second"
            dest: max_rw_iops
            type: int
          - name: "--max-rw-mbytes"
            help: "Maximum Read Write Megabytes Per Second"
            dest: max_rw_mbytes
            type: int
          - name: "--max-r-mbytes"
            help: "Maximum Read Megabytes Per Second"
            dest: max_r_mbytes
            type: int
          - name: "--max-w-mbytes"
            help: "Maximum Write Megabytes Per Second"
            dest: max_w_mbytes
            type: int
      - name: set
        help: "Sets a storage pool's attributes"
        arguments:
          - name: "pool_id"
            help: "Pool id"
            dest: pool_id
            type: str
          - name: "--pool-max"
            help: "Pool maximum size: 20M, 20G"
            dest: pool_max
            type: size
          - name: "--lvol-max"
            help: "Logical volume maximum size: 20M, 20G"
            dest: lvol_max
            type: size
          - name: "--max-rw-iops"
            help: "Maximum Read Write IO Per Second"
            dest: max_rw_iops
            type: int
          - name: "--max-rw-mbytes"
            help: "Maximum Read Write Megabytes Per Second"
            dest: max_rw_mbytes
            type: int
          - name: "--max-r-mbytes"
            help: "Maximum Read Megabytes Per Second"
            dest: max_r_mbytes
            type: int
          - name: "--max-w-mbytes"
            help: "Maximum Write Megabytes Per Second"
            dest: max_w_mbytes
            type: int
      - name: list
        help: "Lists all storage pools"
        arguments:
          - name: "--json"
            help: "Print outputs in json format"
            dest: json
            type: bool
            action: store_true
          - name: "--cluster-id"
            help: "Cluster id"
            dest: cluster_id
            type: str
      - name: get
        help: "Gets a storage pool's details"
        arguments:
          - name: "pool_id"
            help: "Pool id"
            dest: pool_id
            type: str
          - name: "--json"
            help: "Print outputs in json format"
            dest: json
            type: bool
            action: store_true
      - name: delete
        help: "Deletes a storage pool"
        usage: It is only possible to delete a pool if it is empty (no provisioned logical volumes contained).
        arguments:
          - name: "pool_id"
            help: "Pool id"
            dest: pool_id
            type: str
      - name: enable
        help: "Set a storage pool's status to Active"
        arguments:
          - name: "pool_id"
            help: "Pool id"
            dest: pool_id
            type: str
      - name: disable
        help: "Sets a storage pool's status to Inactive."
        arguments:
          - name: "pool_id"
            help: "Pool id"
            dest: pool_id
            type: str
      - name: get-capacity
        help: "Gets a storage pool's capacity"
        arguments:
          - name: "pool_id"
            help: "Pool id"
            dest: pool_id
            type: str
      - name: get-io-stats
        help: "Gets a storage pool's I/O statistics"
        arguments:
          - name: "pool_id"
            help: "Pool id"
            dest: pool_id
            type: str
          - name: "--history"
            help: "(XXdYYh), list history records (one for every 15 minutes) for XX days and YY hours (up to 10 days in total)."
            dest: history
            type: str
          - name: "--records"
            help: "Number of records, default: 20"
            dest: records
            type: int
            default: 20
  - name: "snapshot"
    help: "Snapshot commands"
    weight: 600
    subcommands:
      - name: add
        help: "Creates a new snapshot"
        arguments:
          - name: "volume_id"
            help: "Logical volume id"
            dest: volume_id
            type: str
          - name: "name"
            help: "New snapshot name"
            dest: name
            type: str
      - name: list
        help: "Lists all snapshots"
        arguments:
          - name: "--all"
            help: "List soft deleted snapshots"
            dest: all
            type: bool
            action: store_true
      - name: delete
        help: "Deletes a snapshot"
        arguments:
          - name: "snapshot_id"
            help: "Snapshot id"
            dest: snapshot_id
            type: str
          - name: "--force"
            help: "Force remove"
            dest: force
            type: bool
            action: store_true
      - name: clone
        help: "Provisions a new logical volume from an existing snapshot"
        arguments:
          - name: "snapshot_id"
            help: "Snapshot id"
            dest: snapshot_id
            type: str
          - name: "lvol_name"
            help: "Logical volume name"
            dest: lvol_name
            type: str
          - name: "--resize"
            help: "New logical volume size: 10M, 10G, 10(bytes). Can only increase."
            dest: resize
            type: size
            default: "0"
